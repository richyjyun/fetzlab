function [spkTime,spk,noise] = sortChannel(Data,p)
% Summary
% Sorts the channel with the paramters. Assumes a single spike. 
%
% Inputs
% Data - vector of data
% p - sorting parameters
%
% Outputs
% spkTime - time of spikes (in samples)
% spk - extracted spike waveforms
% noise - threshold crossings determined to be noise
%
% Details
% Sorts using PCA and 2 window discrimination using the parameters passed.
% See getSortingParams.m for parameter details

    % filter and get snippets
    filt = hardwareFilt(Data,p.bw,p.fs);
    
    cross = filt < p.thresh;
    cross = find(diff(cross) == 1)';
    
    inds = repmat(cross, length(p.range), 1) + repmat(p.range(:), 1, size(cross,2));
    inds(:,inds(1,:)<=0) = [];
    inds(:,inds(end,:)>length(filt)) = [];
    
    snips = filt(inds);

    % transform into SVD space
    Vr = snips'*p.Ur/p.Sr;
    
    D = sqrt(sum((Vr-p.cent).^2,2));

    bad = false(length(D),1);
    bad(D>p.dlim) = true;

    % do 2 window discrim
    win1 = filt(cross+p.win1del) >= p.win1lim(1) & filt(cross+p.win1del) <= p.win1lim(2);
    win2 = filt(cross+p.win2del) >= p.win2lim(1) & filt(cross+p.win2del) <= p.win2lim(2);
    
    bad(~(win1|win2)) = true;
    
    % return good times
    spkTime = cross(~bad);
    spk = snips(:,~bad);
    noise = snips(:,bad);
    
end